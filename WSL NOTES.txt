1. Refer official documentation for the WSL installation => https://learn.microsoft.com/en-us/windows/wsl/basic-commands

2. List All Distro - "wsl -l -o" or "wsl --list --online"
3. Install Ubuntu - wsl --install -d ubuntu
4. Now ubuntu will be installed as a distro and is shown in start menu.
5. Now either go to start menu and click on ubuntu or use wsl -d ubuntu
6. If you just type "wsl", you will land in the linux system and not the ubuntu system.
7. Access Specific Distro and Specific User using Powershel - wsl -d ubuntu -u ayush
8. If password is asked, type "Ab@123456"
9. Check Installed Distro and WSL Version - "wsl -l -v" or "wsl --list --verbose"
10. Access using Root User - "wsl -d ubuntu -u root"
11. If you want to access ubuntu with root access everytime then set default user to root "ubuntu config --default-user root"

"
C:\Users\CZ0258> wsl -l -v
NAME                   STATE           VERSION
docker-desktop         Stopped         2
docker-desktop-data    Stopped         2
Ubuntu                 Running         2
"

12. Shutdown All Distro - "wsl --shutdown"
13. Terminate one Specific Distro - wsl -t ubuntu
14. Check OS Information, first login to ubuntu and then - "cat /etc/os-release"
15. Reset Root User Password
"
*) Type "wsl -d ubuntu -u ayush" and try to go to root using "su". If the password for root user is wrong then you cannot access the root.
a) Access ubuntu using root => wsl -d ubuntu -u root
b) Command to change password => passwd root
c) Try with sudo if you get access or permission error => sudo passwd root
"
16. Find IP - "wsl -d ubuntu hostname -I"
17. If you want to login to ubuntu and check IP, then "ip a"
18. Change Hostname - "sudo nano /etc/wsl.conf", then type
"
[boot]
systemd=true

[network]
hostname=ubuntu
generateHosts=false
" 
19. Resolve Error Name or service not known
"
sudo nano /etc/hosts

change all the old hostname to new hostname i.e ubuntu
"
20. Export Distro or Backup Distro - wsl --export distro_name destination_path
21. Import Distro or Restore Distro - wsl --import any_name destination_path source_file_path
22. Install Kali Linux - "wsl --install -d kali-linux"
23. Uninstall Distro - "wsl --unregister kali-linux"

---

### **WSL 2 Requirements and Installation**

**Hardware Requirements**  
- 64-bit processor (ARM supported)  
- 4 GB RAM minimum (16GB+ recommended)  
- Enabled virtualization in BIOS (Intel VT-x or AMD-V)  

**Software Requirements**  
- Windows 11 or Windows 10 (build 19041 or higher)  

**Installation**  
1. Open Windows Terminal with admin privileges.  
2. Type `wsl --install` and follow the prompts (including restart).  
3. Set up a username and password when prompted.  

---

### **Basic WSL Commands**

- **Launch a distro:**  
  `wsl -d <distro name>` (e.g., `wsl -d Ubuntu`)  

- **List available distros:**  
  `wsl --list --online`  

- **Install a distro:**  
  `wsl --install <distro name>`  

- **List installed distros (with details):**  
  `wsl --list --verbose`  

- **Shut down all WSL instances:**  
  `wsl --shutdown`  

- **Terminate a specific distro:**  
  `wsl --terminate <distro name>`  

- **Set default distro:**  
  `wsl --set-default <distro name>`  

- **Check WSL status:**  
  `wsl --status`  

- **Unregister (remove) a distro:**  
  `wsl --unregister <distro name>`  

---

### **Accessing Files**

- **From Linux to Windows:**  
  - Access C drive: `/mnt/c`  
  - Open current Linux directory in Windows Explorer: `explorer.exe .`  

- **From Windows to Linux:**  
  - Access Linux files via the "Linux" location in the Home bar (Windows 11).  

---

### **GUI Apps**

- **WSLG:**  
  Launches Linux GUI apps in the Windows environment.  
  Example: Installing and launching Wireshark in Ubuntu.  

- **Cali Linux's Winex:**  
  Runs a full Cali desktop environment.  
  - Install: `sudo apt install cali-win-cex`  
  - Launch: `cex`  

---

### **VS Code Integration**

- Seamlessly edit Linux files using VS Code in Windows.  
- **Open a file in VS Code:** `code <file name>`  
- **Connect VS Code to WSL:** Install the "WSL" extension.  

---

### **Docker**

- WSL 2 can be used as the backend for Docker containers.  
- **Installation options:**  
  - From terminal: `sudo apt install docker.io`  
  - Docker Desktop (provides a GUI for managing containers).  
  - Docker Desktop can be configured to use WSL 2 instead of Hyper-V.  
- VS Code has a Docker extension for managing containers within the editor.  

---

### **Virtualization Software**

- Virtual Box can now use Hyper-V, allowing it to run alongside WSL 2.  

---

### **GPU Access**

- WSL instances have access to the system's GPU.  
  Example: Running `nvidia-smi` in Ubuntu to view GPU information.  

---

### **Custom Configuration**

- **Local Config (per distro):**  
  Located at `/etc/wsl.conf`  
  Options include automount settings, network settings, user settings, etc.  

- **Global Config (for all distros):**  
  `%UserProfile%\.wslconfig` (must be created manually)  
  Example: Changing the networking mode to "mirrored".  

---

### **Backing Up and Restoring**

- **Exporting a distro to a tar file:**  
  `wsl --export <distro name> <file name>.tar`  

- **Importing a distro from a tar file:**  
  `wsl --import <new distro name> <install location> <file name>.tar`  

- **Connecting as a specific user:**  
  `wsl -d <distro name> -u <username>`  

---
